<?xml version="1.0" encoding="utf-8"?>
<Configuration>
  <SelectionSets>
    <SelectionSet>
      <Name>AvailableDrivesFromDriveEnclosures</Name>
      <Types>
        <TypeName>HPEOneView.Storage.AvailableDiskDrive</TypeName>
      </Types>
    </SelectionSet>
  </SelectionSets>
  <Controls>
    <!--AvailableDrivesFromDriveEnclosures-GroupingFormat-->
    <Control>
      <Name>AvailableDrivesFromDriveEnclosures-GroupingFormat</Name>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <Frame>
                <LeftIndent>4</LeftIndent>
                <CustomItem>
                  <Text>SASLogicalInterconnectName: </Text>
                  <ExpressionBinding>
                    <PropertyName>SASLogicalInterconnectName</PropertyName>
                  </ExpressionBinding>
                  <NewLine/>
                </CustomItem>
              </Frame>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </Control>
  </Controls>
  <ViewDefinitions>
    <!--ManagedSan.Zone FT-->
    <View>
      <Name>ManagedSanZone</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.ManagedSan.Zone</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Members</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ManagedSan</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.Members.Name</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--ManagedSan.Zone FL-->
    <View>
      <Name>ManagedSanZone</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.ManagedSan.Zone</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SAN</Label>
                <PropertyName>ManagedSAN</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>State</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Members</Label>
                <PropertyName>Members</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Created</Label>
                <PropertyName>Created</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Modified</Label>
                <PropertyName>Modified</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--ManagedSan.Zone.Alias FT-->
    <View>
      <Name>ManagedSanZoneAlias</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.ManagedSan.Zone.Alias</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>WWN</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--ManagedSan.Zone.Alias FL-->
    <View>
      <Name>ManagedSanZoneAlias</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.ManagedSan.Zone.Alias</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>WWN</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.San.Endpoint FT-->
    <View>
      <Name>Endpoint</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.San.Endpoint</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Port Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Online</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SAN Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zone Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>wwn</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>portType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>isOnline</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>sanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoneName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Profile.SanVolume FT-->
    <View>
      <Name>sanvolumes</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Profile.SanVolume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Volume ID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Volume Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LUN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Pool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>lunType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeStoragePoolUri].name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} GB" -f ($profileCache[$_.volumeUri].provisionedCapacity / 1gb)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $profileCache[$_.volumeUri].provisionType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($profileCache[$_.volumeUri].shareable) { "{0}" -f "Shared" } else { "{0}" -f "Private" }</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FT-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProvisioningType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provisioned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StoragePool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SnapshotPool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Used By</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>provisioningType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.isShareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-OVRequest -Uri (Send-OVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-OVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
               <TableColumnItem>
                <ScriptBlock>
                if (-not([String]::IsNullOrEmpty($_.deviceSpecificAttributes.snapshotPoolUri)))
                {
                  (Send-OVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).name
                }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $associationProfileToVol = (Send-OVRequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-OVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.Volume FL-->
    <View>
      <Name>StorageVolume</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.Volume</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>LunWwn</Label>
                <PropertyName>lunWwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisioningType</Label>
                <PropertyName>provisioningType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisionedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.provisionedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AllocatedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.isShareable) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>(Send-OVRequest -Uri (Send-OVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).storageSystemUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StoragePool</Label>
                <ScriptBlock>
                  (Send-OVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SnapshotPool</Label>
                <ScriptBlock>
                  if (-not([String]::IsNullOrEmpty($_.deviceSpecificAttributes.snapshotPoolUri)))
                  {
                    (Send-OVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).name
                  }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>'{0}' -f (Send-OVRequest $_.deviceSpecificAttributes.snapshotPoolUri -Hostname $_.ApplianceConnection.Name).deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystemVolumeName</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Used By</Label>
                <ScriptBlock>
                  $associationProfileToVol = (Send-OVRequest ("/rest/index/associations?childUri=$($_.uri)&amp;name=server_profiles_to_storage_volumes") -Hostname $_.ApplianceConnection.Name).members
                  if ($associationProfileToVol) {
                  $profileNames = $associationProfileToVol | % { (Send-OVRequest $_.parentUri -Hostname $_.ApplianceConnection.Name).name }
                  [Array]::Sort([array]$profileNames)
                  $profileNames
                  }

                  else { "No server profiles" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.VolumeTemplate FT-->
    <View>
      <Name>VolumeTemplate</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.VolumeTemplate</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProvisionedType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Sharing</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StoragePool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SnapshotPool</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.properties.size.default / 1GB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0}' -f $_.properties.provisioningType.default</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.properties.isShareable.default) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f (Send-OVRequest $_.compatibleStorageSystemsUri -Hostname $_.ApplianceConnection.Name).members.displayName</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f (Send-OVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
               <TableColumnItem>
                <ScriptBlock>
                if (-not([String]::IsNullOrEmpty($_.properties.snapshotPool.default)))
                {
                  (Send-OVRequest $_.properties.snapshotPool.default -Hostname $_.ApplianceConnection.Name).name
                }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.VolumeTemplate FL-->
    <View>
      <Name>VolumeTemplate</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.VolumeTemplate</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>description</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ProvisioningType</Label>
                <ScriptBlock>'{0}' -f $_.properties.provisioningType.default</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ProvisionedCapacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.properties.size.default / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Sharing</Label>
                <ScriptBlock>
                  if ($_.properties.isShareable.default) { "Shared"}
                  else              { "Private" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>"{0}" -f (Send-OVRequest $_.compatibleStorageSystemsUri -Hostname $_.ApplianceConnection.Name).members.displayName</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StoragePool</Label>
                <ScriptBlock>"{0}" -f (Send-OVRequest $_.storagePoolUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SnapshotPool</Label>
                <ScriptBlock>
                  if (-not([String]::IsNullOrEmpty($_.properties.snapshotPool.default)))
                  {
                    (Send-OVRequest $_.properties.snapshotPool.default -Hostname $_.ApplianceConnection.Name).name
                  }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StorageSystemVolumeName</Label>
                <PropertyName>deviceVolumeName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.VolumeSnapshot FT-->
    <View>
      <Name>StorageVolumeSnapshot</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.VolumeSnapshot</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ParentVolume</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>"{0}" -f $_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>(Send-OVRequest $_.storageVolumeUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>'{0:N2} GB' -f ($_.capacity / 1GB)</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.VolumeSnapshot FL-->
    <View>
      <Name>StorageVolumeSnapshot</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.VolumeSnapshot</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>"{0}" -f $_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Parent Volume</Label>
                <ScriptBlock>(Send-OVRequest $_.storageVolumeUri -Hostname $_.ApplianceConnection.Name).name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <ScriptBlock>"{0} ({1})" -f $_.state, $_.stateReason</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Capacity</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.capacity / 1GB)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.DiscoveredPool FT-->
    <View>
      <Name>StorageSystemDiscoveredPool</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.System.DiscoveredPool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>domain</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>raidLevel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.DiscoveredPool FL-->
    <View>
      <Name>StorageSystemDiscoveredPool</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.System.DiscoveredPool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-OVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DriveType</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-OVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VolumeTemplates</Label>
                <ScriptBlock>(Send-OVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.StoragePool FT-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.StoragePool</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StorageSystem</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RAID</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Total</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Allocated</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-OVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.StoragePool FL-->
    <View>
      <Name>StorageSystemPool</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.StoragePool</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StorageSystem</Label>
                <ScriptBlock>if ($_.storageSystemUri) { (Send-OVRequest $_.storageSystemUri -Hostname $_.ApplianceConnection.Name).name }</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DriveType</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.deviceType</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RAID</Label>
                <ScriptBlock>$_.deviceSpecificAttributes.supportedRAIDLevel</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Total</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.totalCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Allocated</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.allocatedCapacity.totalAllocatedCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Free</Label>
                <ScriptBlock>'{0:N2} GB' -f ($_.freeCapacity / 1GB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Volumes</Label>
                <ScriptBlock>(Send-OVRequest "/rest/index/resources?category=storage-volumes&amp;query=storage_volume_storagepool_uri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VolumeTemplates</Label>
                <ScriptBlock>(Send-OVRequest "/rest/index/resources?sort=name:asc&amp;category=storage-volume-templates&amp;query=storagePoolUri:'$($_.uri)'" -Hostname $_.ApplianceConnection.Name).count</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.SanManager FT-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Managed SANs</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>providerDisplayName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>deviceManagerVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                    $resp = Send-OVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                    foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                    $managedSans

                  }

                  else { "None" }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.SanManager FL-->
    <View>
      <Name>SanManager</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.SanManager</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>providerDisplayName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Version</Label>
                <PropertyName>deviceManagerVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Managed SANs</Label>
                <ScriptBlock>
                  $managedSans = New-Object System.Collections.ArrayList
                  if ($_.managedSansUri)
                  {

                  $resp = Send-OVRequest $_.managedSansUri -Hostname $_.ApplianceConnection.Name
                  foreach ($member in $resp.members) { [void]$managedSans.Add($member.name) }

                  $managedSans

                  }

                  else { "None" }
                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.ManagedSan FT-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrincipleSwitch</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Networks</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Zoned</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>AutomateZoning</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ZoningPolicy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UseAliases</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>principalSwitch</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.associatedNetworks.name -join ', '</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>zoningState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.zoningPolicy</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.ManagedSan FL-->
    <View>
      <Name>ManagedSan</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.ManagedSan</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PrincipalSwitch</Label>
                <PropertyName>principalSwitch</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Networks</Label>
                <ScriptBlock>$_.associatedNetworks.name -join ', '</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Zoned</Label>
                <PropertyName>zoningState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>AutomateZoning</Label>
                <ScriptBlock>
                  if ($_.sanPolicy.zoningPolicy -eq "NoZoning") { "No" }
                  else { "Yes" }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ZoningPolicy</Label>
                <ScriptBlock>$_.sanPolicy.zoningPolicy</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Use Aliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System FT-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Family</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ManagedDomain</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WWN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
         </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>family</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.serialNumber</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.model</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.managedDomain</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.wwn</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.deviceSpecificAttributes.firmware</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System FL-->
    <View>
      <Name>StorageSystem</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.System</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ManagedDomain</Label>
                <PropertyName>managedDomain</PropertyName>
              </ListItem>
              <ListItem>
                <Label>WWN</Label>
                <PropertyName>wwn</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmware</PropertyName>
              </ListItem>
              <ListItem>
                <Label>TotalCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.totalCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>AllocatedCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.allocatedCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FreeCapacity</Label>
                <ScriptBlock>'{0:N2} TB' -f ($_.freeCapacity / 1TB)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>UseAliases</Label>
                <ScriptBlock>$_.sanPolicy.enableAliasing</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.System.Port FT-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ConnectionState</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Address</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExpectedSAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ActualSAN</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PortGroup</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$StorageSystemPortModeEnum[$_.mode]</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>connectionState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>protocolType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>expectedSanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>actualSanName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>groupName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.System.Port FL-->
    <View>
      <Name>StorageSystemPort</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.System.Port</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>portName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>protocolType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Address</Label>
                <PropertyName>address</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ExpectedNetwork</Label>
                <PropertyName>expectedNetworkName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ActualNetwork</Label>
                <ScriptBlock>
                  if ($_.actualNetworkUri -and (-not($_.actualNetworkUri -eq "unknown")))
                  {
                  $net = Send-OVRequest $_.actualNetworkUri -Hostname $_.ApplianceConnection.Name
                  if ($net.fabricType -eq "FabricAttach") {"$($net.name) [FA]"}
                  else {" $($net.name) [DA]"}
                  }
                  else { $_.actualNetworkUri }
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>PortGroup</Label>
                <PropertyName>groupName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure FT-->
    <View>
      <Name>DriveEnclosure</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveBays</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>I/OAdapters</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>powerState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ioAdapterCount</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure FL-->
    <View>
      <Name>DriveEnclosure</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>powerState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DriveBays</Label>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>I/OAdapters</Label>
                <PropertyName>ioAdapterCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>

    <!--Storage.DriveEnclosure.IoAdapter FT-->
    <View>
      <Name>DriveEnclosureIoAdapter</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure.IoAdapter</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Appliance</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveBays</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>I/OAdapters</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>powerState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ioAdapterCount</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.IoAdapter FL-->
    <View>
      <Name>DriveEnclosureIoAdapter</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure.IoAdapter</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Appliance</Label>
                <ScriptBlock>$_.ApplianceConnection.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>powerState</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
              <ListItem>
                <Label>DriveBays</Label>
                <ScriptBlock>
                  '{0}/{1}' -f ($_.driveBays | ? drive).count, $_.driveBayCount
                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>I/OAdapters</Label>
                <PropertyName>ioAdapterCount</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay FT-->
    <View>
      <Name>DriveBay</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure.DriveBay</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drive</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.drive.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay FL-->
    <View>
      <Name>DriveBay</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure.DriveBay</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Drive</Label>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.drive.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay.Drive FT-->
    <View>
      <Name>DriveBayDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure.DriveBay.Drive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Firmware</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>state</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>firmwareVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>serialNumber</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!--Storage.DriveEnclosure.DriveBay.Drive FL-->
    <View>
      <Name>DriveBayDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.DriveEnclosure.DriveBay.Drive</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Status</Label>
                <PropertyName>status</PropertyName>
              </ListItem>
              <ListItem>
                <Label>State</Label>
                <PropertyName>state</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Model</Label>
                <PropertyName>model</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Interface</Label>
                <PropertyName>deviceInterface</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Type</Label>
                <PropertyName>driveMedia</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Connectivity</Label>
                <ScriptBlock>'{0}Gbps' -f $_.linkRateInGbs</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>rotationalRpms</Label>
                <ScriptBlock>'{0:00}K' -f ($_.rotationalRpms / 1000)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Drive</Label>
                <ScriptBlock>

                  [int64]$_value = [int64]$_.capacity * 1024 * 1024 * 1024

                  If ($_value -ge 1TB) { [string]::Format("{0:0.#}TB", [math]::Round($_value / 1TB,1)) }
                  ElseIf ($_value -ge 1GB) { [string]::Format("{0:0}GB", $_value / 1GB) }
                  ElseIf ($_value -ge 1MB) { [string]::Format("{0:0}MB", $_value / 1MB) }
                  ElseIf ($_value -ge 1KB) { [string]::Format("{0:0}KB", $_value / 1KB) }
                  ElseIf ($_value -gt 0) { [string]::Format("{0:0.00}B", $_value) }
                  Else {""}

                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Firmware</Label>
                <PropertyName>firmwareVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>SerialNumber</Label>
                <PropertyName>serialNumber</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <!--Storage.AvailableDiskDrive FT-->
    <View>
      <Name>AvailableDiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.AvailableDiskDrive</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>type</PropertyName>
        <CustomControlName>AvailableDrivesFromDriveEnclosures-GroupingFormat</CustomControlName>
      </GroupBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberAvailable</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Type</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Capacity</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberAvailable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!-- HPEOneView.Storage.LogicalJBOD FT-->
    <View>
      <Name>LogicalJBOD</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.LogicalJBOD</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveTechnology</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MinSize</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MaxSize</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UsedBy</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Drives</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0} {1}" -f $_.Interface, $_.Media</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPEOneView.Utilities.Library]::IntToStorageString(([int]$_.MinSize * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPEOneView.Utilities.Library]::IntToStorageString(([int]$_.MaxSize * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>UsedBy</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Drives</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!-- HPEOneView.Storage.Drive FT-->
    <View>
      <Name>Drive</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.Drive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LogicalJbodName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SerialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPEOneView.Utilities.Library]::IntToStorageString(([int]$_.Capacity * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LogicalJbodName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <!-- HPEOneView.Storage.AvailableDriveType FT-->
    <View>
      <Name>AvailableDriveType</Name>
      <ViewSelectedBy>
        <TypeName>HPEOneView.Storage.AvailableDriveType</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <AutoSize/>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SASLogicalInterconnectName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveEnclosureName</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Capacity</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberAvailable</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SASLogicalInterconnectName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveEnclosureName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Type</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[HPEOneView.Utilities.Library]::IntToStorageString(([int]$_.Capacity * 1GB))</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberAvailable</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>



  </ViewDefinitions>
</Configuration>